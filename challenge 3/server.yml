Parameters:
  StackName:
    Description: Stack Name
    Type: String

Resources:
  ServerSG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: ApplicationSG
      GroupDescription: A server security group
      VpcId:  
        Fn::ImportValue: !Sub '${StackName}-VPCId'
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          FromPort: -1
          ToPort: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: stack
          Value: !Ref StackName

# EC2 instance group
  EC2LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: EC2Template
      LaunchTemplateData:
        DisableApiTermination: true
        ImageId: ami-005f9685cb30f234b
        InstanceType: t2.micro
        KeyName: SSH-Key
        SecurityGroupIds:
          - !Ref ServerSG
  EC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      LaunchTemplate: 
        LaunchTemplateId: !Ref EC2LaunchTemplate
        Version: 1
      SubnetId:
        Fn::ImportValue: !Sub '${StackName}-PrivateSubnetId' 
      UserData: !Base64 |
        #!/bin/bash -ex
        yum update -y
        yum install -y httpd
        systemctl start httpd
        systemctl enable httpd
        echo "<h1>Hello World from $(hostname -f)</h1>" > /var/www/html/index.html

  InstanceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument: 
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - 'sts:AssumeRole'
      Policies:
        - PolicyName: "root"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action: "*"
                Resource: "*"
  ServerInstanceProfile: 
    Type: "AWS::IAM::InstanceProfile"
    Properties: 
      Roles: 
        - !Ref InstanceRole